openapi: "3.0.0"
info:
  version: 1.0.0
  title: Stock Simulator API
servers:
  - url: http://localhost:4000
tags:
  - name: auth
    description: Everything about authentication
  - name: user
    description: Everything about users
  - name: product
    description: Everything about products
paths:
  /auth/signin/:
    post:
      summary: Sign in the user
      operationId: signIn
      tags:
        - auth
      requestBody:
        description: Credentials of the user
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
  /auth/signup/:
    post:
      summary: Create a new account for the user
      operationId: signUp
      tags:
        - auth
      requestBody:
        description: Account informations
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - username
              properties:
                email:
                  type: string
                password:
                  type: string
                username:
                  type: string
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
  /auth/signout/:
    delete:
      summary: Disconnect a logged user
      operationId: signOut
      tags:
        - auth
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/user/current-session:
    get:
      summary: Get the logged user informations
      operationId: currentSession
      tags:
        - user
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/products/:
    get:
      summary: Get the products
      operationId: getProducts
      tags:
        - product
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
    post:
      summary: Add a products
      operationId: addProducts
      tags:
        - product
      requestBody:
        description: Account informations
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
               - name
               - image
              properties:
                name:
                  type: string
                expirationDate:
                  type: string
                image:
                  type: string
                  format: binary
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
    delete:
      summary: Take a product
      operationId: takeProduct
      tags:
        - product
      requestBody:
        description: Product id
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: number
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'  
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'  
    InternalError:
      description: Internal error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'  
    Success:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'  
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
